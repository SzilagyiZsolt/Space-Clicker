let distance = 100000; // Kezd≈ë t√°vols√°g (km)
let clickCount = 0; // Kattint√°sok sz√°ma
let distancePerClick = 1; // Mennyivel cs√∂kkenti a t√°vols√°got egy kattint√°s
let fuelRate = 0; // Automatikus kattint√°sok sz√°ma m√°sodpercenk√©nt
let fuelCost = 100; // Fejleszt√©s √°ra
let fuelInterval; // Id≈ëz√≠t≈ë az automatikus kattint√°sokhoz
let fuelLevel = 0; // Az √ºzemanyag fejleszt√©s szintje

const distanceDisplay = document.getElementById("distance");
const clickCountDisplay = document.getElementById("clickCount");
const fuelStatus = document.getElementById("fuelStatus");
const clickButton = document.getElementById("clickButton");
const fuelUpgradeButton = document.getElementById("fuelUpgrade");
const progressRocket = document.getElementById("progress-rocket");

// Adatok bet√∂lt√©se Local Storage-b≈ël
function loadGame() {
    const savedGame = JSON.parse(localStorage.getItem("spaceClickerSave"));
    if (savedGame) {
        distance = savedGame.distance || 100000;
        clickCount = savedGame.clickCount || 0;
        fuelRate = savedGame.fuelRate || 0;
        fuelCost = savedGame.fuelCost || 100;
        fuelLevel = savedGame.fuelLevel || 0; // Szint visszat√∂lt√©se

        updateUI(); // Fel√ºlet friss√≠t√©se
        fuelUpgradeButton.textContent = `√územanyag √°r: ${fuelCost} - Szint ${fuelLevel}`; // Gomb sz√∂veg√©nek friss√≠t√©se
        if (fuelRate > 0) startFuel(); // Ha van automata kattint√°s, √∫jraind√≠tjuk
    }
}

// Adatok ment√©se Local Storage-be
function saveGame() {
    const gameData = {
        distance: distance,
        clickCount: clickCount,
        fuelRate: fuelRate,
        fuelCost: fuelCost,
        fuelLevel: fuelLevel // Fejleszt√©s szintj√©nek ment√©se
    };
    localStorage.setItem("spaceClickerSave", JSON.stringify(gameData));
}

// Ment√©s t√∂rl√©s gomb esem√©ny
const resetButton = document.getElementById("resetButton");

resetButton.addEventListener("click", () => {
    const confirmation = confirm("Biztos szeretn√©d t√∂r√∂lni a ment√©sedet?");
    if (confirmation) {
        resetGame();
    }
});

// J√°t√©k√°ll√°s vissza√°ll√≠t√°sa
function resetGame() {
    // Local Storage t√∂rl√©se
    localStorage.removeItem("spaceClickerSave");
    
    // Alap√©rt√©kek vissza√°ll√≠t√°sa
    distance = 100000;
    clickCount = 0;
    fuelRate = 0;
    fuelCost = 100;
    fuelLevel = 0;

    // Automatikus kattint√°sok id≈ëz√≠t≈ëj√©nek le√°ll√≠t√°sa
    if (fuelInterval) clearInterval(fuelInterval);

    // UI friss√≠t√©se
    updateUI();
    fuelUpgradeButton.textContent = `√územanyag √°r: ${fuelCost} - Szint ${fuelLevel}`;
    fuelStatus.textContent = "Termel√©s: 0 / m√°sodperc";

    alert("A ment√©sed t√∂r√∂lve lett. A j√°t√©k √∫jrakezd≈ëd√∂tt.");
}

// Kattint√°s esem√©ny
clickButton.addEventListener("click", () => {
    handleClick();
});

// Fejleszt√©s v√°s√°rl√°sa - √územanyag
fuelUpgradeButton.addEventListener("click", () => {
    if (clickCount >= fuelCost) {
        clickCount -= fuelCost;
        fuelCost += 5; // N√∂velj√ºk a fejleszt√©s √°r√°t
        fuelRate += 0.5; // Automatikus kattint√°sok n√∂vel√©se
        fuelLevel++;
        startFuel();
        updateUI();
        checkUpgrades();
        fuelUpgradeButton.textContent = `√územanyag √°r: ${fuelCost} - Szint ${fuelLevel}`;
        saveGame();
    }
});

// Automata kattint√°s ind√≠t√°sa
function startFuel() {
    if (fuelInterval) clearInterval(fuelInterval);
    fuelInterval = setInterval(() => {
        handleClick(fuelRate);
    }, 1000);
    fuelStatus.textContent = `Termel√©s: ${fuelRate} / m√°sodperc`;
}

// Kattint√°s kezel√©se
function handleClick(multiplier = 1) {
    clickCount += multiplier;
    distance -= distancePerClick * multiplier;
    if (distance < 0) distance = 0;
    updateUI();
    checkUpgrades();
    saveGame(); // Mentj√ºk az √°ll√°st minden kattint√°sn√°l
}

// Fel√ºlet friss√≠t√©se
function updateUI() {
    distanceDisplay.textContent = Math.floor(distance);
    clickCountDisplay.textContent = Math.floor(clickCount);
    fuelStatus.textContent = `Termel√©s: ${fuelRate} / m√°sodperc`;

    // Rak√©ta poz√≠ci√≥j√°nak friss√≠t√©se a t√°vols√°g alapj√°n
    const progressPercentage = (100000 - distance) / 100000; // Halad√°s sz√°zal√©kban
    progressRocket.style.bottom = `${progressPercentage * 100}%`;

    if (distance <= 0) {
        distance = 0;
        alert("Gratul√°lok! El√©rted a Holdat! üöÄ");
    }

    checkUpgrades();
}

// Fejleszt√©sek aktiv√°l√°sa
function checkUpgrades() {
    fuelUpgradeButton.disabled = clickCount < fuelCost;
}

// J√°t√©k bet√∂lt√©se
window.addEventListener("load", () => {
    loadGame();
    updateUI();
});

// Biztons√°gi ment√©s bez√°r√°skor
window.addEventListener("beforeunload", () => {
    saveGame();
});
